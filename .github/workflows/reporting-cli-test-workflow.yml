name: Reporting CLI tests workflow

on: [pull_request, push]

env:
  CLI_VERSION: 1.0.0

jobs:
  run-tests:
    name: Run reporting cli tests 

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
    
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout Reporting CLI
        uses: actions/checkout@v2

      - name: Configure sysctl limits
        if: ${{ matrix.os == 'ubuntu-latest' }}
        run: |
          sudo sysctl -w fs.file-max=262144
          sudo sysctl -w vm.max_map_count=262144

      - name: Set up JDK 11
        if: ${{ matrix.os == 'windows-latest' }}
        uses: actions/setup-java@v1
        with:
          java-version: 11

      - name: Install docker
        if: ${{ matrix.os == 'macos-latest' }}
        uses: docker-practice/actions-setup-docker@master
        timeout-minutes: 12

      - name: Enable longer filenames
        if: ${{ matrix.os == 'windows-latest' }}
        run: git config --system core.longpaths true

      - name: Download and run Opensearch and Dashboard
        if: ${{ matrix.os == 'windows-latest' }}
        shell: powershell
        run: |
          Remove-item alias:curl
          curl -LJO https://artifacts.opensearch.org/releases/bundle/opensearch/2.5.0/opensearch-2.5.0-windows-x64.zip
          Expand-Archive -Path .\opensearch-2.5.0-windows-x64.zip -DestinationPath .\
          cd .\opensearch-2.5.0
          Start-Process -FilePath ".\opensearch-windows-install.bat"
          curl -LJO https://artifacts.opensearch.org/releases/bundle/opensearch-dashboards/2.5.0/opensearch-dashboards-2.5.0-windows-x64.zip
          Expand-Archive -Path .\opensearch-dashboards-2.5.0-windows-x64.zip -DestinationPath .\
          cd .\opensearch-dashboards-2.5.0
          Start-Process -FilePath ".\bin\opensearch-dashboards.bat"

      - name: Download and run Opensearch and Dashboard
        if: ${{ matrix.os != 'windows-latest' }}
        run: |
          curl -O https://opensearch.org/samples/docker-compose.yml
          docker-compose up --detach
      
      - name: Check Docker containers
        if: ${{ matrix.os != 'windows-latest' }}
        run: docker ps -a

      - name: Sleep for 200s seconds
        run: sleep 200s
        shell: bash

      - name: Wait for cluster to start
        uses: nick-fields/retry@v2
        with:
          timeout_seconds: 1
          max_attempts: 30
          command: curl https://localhost:9200 -ku 'admin:admin'
          retry_wait_seconds: 30

      - name: Add sample data
        run: |
          curl -XPOST -u 'admin:admin' 'http://localhost:5601/api/sample_data/ecommerce' -H 'osd-xsrf:true'
          curl -XPOST -u 'admin:admin' 'http://localhost:5601/api/sample_data/logs' -H 'osd-xsrf:true'  -H 'securitytenant: global'
          curl -XPOST -u 'admin:admin' 'http://localhost:5601/api/sample_data/flights' -H 'osd-xsrf:true'  -H 'securitytenant: admin_tenant'

      - name: Run integration tests
        run: |
          yarn
          yarn test

      - name: Create a tarball from a package
        run: |
          npm pack

      - name: Rename artifact
        run: |
          mv opensearch-project-reporting-cli-${{ env.CLI_VERSION }}.tgz opensearch-reporting-cli-${{ env.CLI_VERSION }}.tgz

      - name: Upload Artifact
        uses: actions/upload-artifact@v1
        with:
          name: opensearch-reporting-cli-${{ env.CLI_VERSION }}
          path: ./opensearch-reporting-cli-${{ env.CLI_VERSION }}.tgz
      
      - name: Clean up container
        if: always()
        run: |
          docker-compose down
